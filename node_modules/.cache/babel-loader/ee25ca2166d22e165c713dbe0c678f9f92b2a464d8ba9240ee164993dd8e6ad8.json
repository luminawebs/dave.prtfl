{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const LanguageContext=/*#__PURE__*/createContext();export const useLanguage=()=>{const context=useContext(LanguageContext);if(!context){throw new Error('useLanguage must be used within a LanguageProvider');}return context;};export const LanguageProvider=_ref=>{let{children}=_ref;const[language,setLanguage]=useState(()=>{// Check for saved language preference\nconst savedLanguage=localStorage.getItem('edunest-language');if(savedLanguage){return savedLanguage;}// Check browser language\nconst browserLanguage=navigator.language||navigator.userLanguage;if(browserLanguage.startsWith('es')){return'es';}// Default to Spanish\nreturn'es';});useEffect(()=>{localStorage.setItem('edunest-language',language);document.documentElement.lang=language;},[language]);// GeoIP-based language detection (only on first visit)\nuseEffect(()=>{const savedLanguage=localStorage.getItem('edunest-language');if(savedLanguage)return;// user already has preference\n// Fetch geolocation info from free ipapi.co (1k req/day free)\nfetch('https://ipapi.co/json/').then(res=>res.ok?res.json():null).then(data=>{if(!data)return;const country=data.country_code;// Simple mapping: common English-speaking countries → 'en', rest → 'es'\nconst englishCountries=['US','GB','CA','AU','NZ','IE'];const detectedLang=englishCountries.includes(country)?'en':'es';setLanguage(detectedLang);}).catch(()=>{/* silent fail – keep current language */});},[]);const switchLanguage=newLanguage=>{setLanguage(newLanguage);};const value={language,switchLanguage,isSpanish:language==='es',isEnglish:language==='en'};return/*#__PURE__*/_jsx(LanguageContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","LanguageContext","useLanguage","context","Error","LanguageProvider","_ref","children","language","setLanguage","savedLanguage","localStorage","getItem","browserLanguage","navigator","userLanguage","startsWith","setItem","document","documentElement","lang","fetch","then","res","ok","json","data","country","country_code","englishCountries","detectedLang","includes","catch","switchLanguage","newLanguage","value","isSpanish","isEnglish","Provider"],"sources":["D:/00 Lumina Interactiva/website/Strategy/edunest.co/src/contexts/LanguageContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst LanguageContext = createContext();\r\n\r\nexport const useLanguage = () => {\r\n  const context = useContext(LanguageContext);\r\n  if (!context) {\r\n    throw new Error('useLanguage must be used within a LanguageProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const LanguageProvider = ({ children }) => {\r\n  const [language, setLanguage] = useState(() => {\r\n    // Check for saved language preference\r\n    const savedLanguage = localStorage.getItem('edunest-language');\r\n    if (savedLanguage) {\r\n      return savedLanguage;\r\n    }\r\n    \r\n    // Check browser language\r\n    const browserLanguage = navigator.language || navigator.userLanguage;\r\n    if (browserLanguage.startsWith('es')) {\r\n      return 'es';\r\n    }\r\n    \r\n    // Default to Spanish\r\n    return 'es';\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('edunest-language', language);\r\n    document.documentElement.lang = language;\r\n  }, [language]);\r\n\r\n  // GeoIP-based language detection (only on first visit)\r\n  useEffect(() => {\r\n    const savedLanguage = localStorage.getItem('edunest-language');\r\n    if (savedLanguage) return; // user already has preference\r\n\r\n    // Fetch geolocation info from free ipapi.co (1k req/day free)\r\n    fetch('https://ipapi.co/json/')\r\n      .then((res) => res.ok ? res.json() : null)\r\n      .then((data) => {\r\n        if (!data) return;\r\n        const country = data.country_code;\r\n        // Simple mapping: common English-speaking countries → 'en', rest → 'es'\r\n        const englishCountries = ['US', 'GB', 'CA', 'AU', 'NZ', 'IE'];\r\n        const detectedLang = englishCountries.includes(country) ? 'en' : 'es';\r\n        setLanguage(detectedLang);\r\n      })\r\n      .catch(() => {\r\n        /* silent fail – keep current language */\r\n      });\r\n  }, []);\r\n\r\n  const switchLanguage = (newLanguage) => {\r\n    setLanguage(newLanguage);\r\n  };\r\n\r\n  const value = {\r\n    language,\r\n    switchLanguage,\r\n    isSpanish: language === 'es',\r\n    isEnglish: language === 'en'\r\n  };\r\n\r\n  return (\r\n    <LanguageContext.Provider value={value}>\r\n      {children}\r\n    </LanguageContext.Provider>\r\n  );\r\n};\r\n\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,eAAe,cAAGN,aAAa,CAAC,CAAC,CAEvC,MAAO,MAAM,CAAAO,WAAW,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAAAC,OAAO,CAAGP,UAAU,CAACK,eAAe,CAAC,CAC3C,GAAI,CAACE,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,oDAAoD,CAAC,CACvE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,MAAO,MAAM,CAAAE,gBAAgB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC3C,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAGZ,QAAQ,CAAC,IAAM,CAC7C;AACA,KAAM,CAAAa,aAAa,CAAGC,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAC9D,GAAIF,aAAa,CAAE,CACjB,MAAO,CAAAA,aAAa,CACtB,CAEA;AACA,KAAM,CAAAG,eAAe,CAAGC,SAAS,CAACN,QAAQ,EAAIM,SAAS,CAACC,YAAY,CACpE,GAAIF,eAAe,CAACG,UAAU,CAAC,IAAI,CAAC,CAAE,CACpC,MAAO,IAAI,CACb,CAEA;AACA,MAAO,IAAI,CACb,CAAC,CAAC,CAEFlB,SAAS,CAAC,IAAM,CACda,YAAY,CAACM,OAAO,CAAC,kBAAkB,CAAET,QAAQ,CAAC,CAClDU,QAAQ,CAACC,eAAe,CAACC,IAAI,CAAGZ,QAAQ,CAC1C,CAAC,CAAE,CAACA,QAAQ,CAAC,CAAC,CAEd;AACAV,SAAS,CAAC,IAAM,CACd,KAAM,CAAAY,aAAa,CAAGC,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAC9D,GAAIF,aAAa,CAAE,OAAQ;AAE3B;AACAW,KAAK,CAAC,wBAAwB,CAAC,CAC5BC,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAACC,EAAE,CAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,CAAG,IAAI,CAAC,CACzCH,IAAI,CAAEI,IAAI,EAAK,CACd,GAAI,CAACA,IAAI,CAAE,OACX,KAAM,CAAAC,OAAO,CAAGD,IAAI,CAACE,YAAY,CACjC;AACA,KAAM,CAAAC,gBAAgB,CAAG,CAAC,IAAI,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAC,CAC7D,KAAM,CAAAC,YAAY,CAAGD,gBAAgB,CAACE,QAAQ,CAACJ,OAAO,CAAC,CAAG,IAAI,CAAG,IAAI,CACrElB,WAAW,CAACqB,YAAY,CAAC,CAC3B,CAAC,CAAC,CACDE,KAAK,CAAC,IAAM,CACX,0CACD,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,cAAc,CAAIC,WAAW,EAAK,CACtCzB,WAAW,CAACyB,WAAW,CAAC,CAC1B,CAAC,CAED,KAAM,CAAAC,KAAK,CAAG,CACZ3B,QAAQ,CACRyB,cAAc,CACdG,SAAS,CAAE5B,QAAQ,GAAK,IAAI,CAC5B6B,SAAS,CAAE7B,QAAQ,GAAK,IAC1B,CAAC,CAED,mBACER,IAAA,CAACC,eAAe,CAACqC,QAAQ,EAACH,KAAK,CAAEA,KAAM,CAAA5B,QAAA,CACpCA,QAAQ,CACe,CAAC,CAE/B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}