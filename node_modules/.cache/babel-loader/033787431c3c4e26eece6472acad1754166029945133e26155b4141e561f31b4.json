{"ast":null,"code":"// Automatic click tracking utility for elements without React handlers\nimport{trackButtonClick,trackLinkClick,trackContactClick}from'./analytics';export const initializeAutoTracking=()=>{// Wait for DOM to be fully loaded\nconst setupTracking=()=>{// Track all external links\ndocument.querySelectorAll('a[href^=\"http\"], a[href^=\"https\"]').forEach(link=>{if(!link.dataset.tracked){link.addEventListener('click',e=>{const href=link.getAttribute('href');const text=link.textContent.trim()||link.getAttribute('title')||'External Link';trackLinkClick(href,text,'External Link');});link.dataset.tracked='true';}});// Track mailto links\ndocument.querySelectorAll('a[href^=\"mailto:\"]').forEach(link=>{if(!link.dataset.tracked){link.addEventListener('click',e=>{const email=link.getAttribute('href').replace('mailto:','');trackContactClick('Email',email);});link.dataset.tracked='true';}});// Track tel links\ndocument.querySelectorAll('a[href^=\"tel:\"]').forEach(link=>{if(!link.dataset.tracked){link.addEventListener('click',e=>{const phone=link.getAttribute('href').replace('tel:','');trackContactClick('Phone',phone);});link.dataset.tracked='true';}});// Track buttons that don't have React handlers\ndocument.querySelectorAll('button, input[type=\"button\"], input[type=\"submit\"]').forEach(button=>{if(!button.dataset.tracked&&!button.onclick){button.addEventListener('click',e=>{const text=button.textContent.trim()||button.getAttribute('value')||button.getAttribute('title')||'Button Click';trackButtonClick(text,'Auto-tracked');});button.dataset.tracked='true';}});// Track clicks on service cards that don't have explicit tracking\ndocument.querySelectorAll('.service-card a, .card-action').forEach(link=>{if(!link.dataset.tracked){link.addEventListener('click',e=>{var _card$querySelector;const card=link.closest('.service-card');const serviceTitle=card?(_card$querySelector=card.querySelector('h3'))===null||_card$querySelector===void 0?void 0:_card$querySelector.textContent.trim():'Service Card';trackButtonClick(\"Service Card - \".concat(serviceTitle),'Services');});link.dataset.tracked='true';}});// Track social media links\ndocument.querySelectorAll('a[href*=\"facebook\"], a[href*=\"twitter\"], a[href*=\"linkedin\"], a[href*=\"instagram\"], a[href*=\"youtube\"]').forEach(link=>{if(!link.dataset.tracked){link.addEventListener('click',e=>{const href=link.getAttribute('href');let platform='Social Media';if(href.includes('facebook'))platform='Facebook';else if(href.includes('twitter'))platform='Twitter';else if(href.includes('linkedin'))platform='LinkedIn';else if(href.includes('instagram'))platform='Instagram';else if(href.includes('youtube'))platform='YouTube';trackLinkClick(href,platform,'Social Media');});link.dataset.tracked='true';}});// Track download links\ndocument.querySelectorAll('a[href$=\".pdf\"], a[href$=\".doc\"], a[href$=\".docx\"], a[href$=\".zip\"], a[href*=\"download\"]').forEach(link=>{if(!link.dataset.tracked){link.addEventListener('click',e=>{const href=link.getAttribute('href');const fileName=href.split('/').pop()||'Download';trackLinkClick(href,fileName,'Download');});link.dataset.tracked='true';}});};// Run immediately if DOM is ready\nif(document.readyState==='loading'){document.addEventListener('DOMContentLoaded',setupTracking);}else{setupTracking();}// Also run when new content is added (for dynamic content)\nconst observer=new MutationObserver(mutations=>{let shouldSetupTracking=false;mutations.forEach(mutation=>{if(mutation.type==='childList'&&mutation.addedNodes.length>0){mutation.addedNodes.forEach(node=>{if(node.nodeType===1){// Element node\nshouldSetupTracking=true;}});}});if(shouldSetupTracking){// Debounce the setup to avoid too many calls\nclearTimeout(window.autoTrackingTimeout);window.autoTrackingTimeout=setTimeout(setupTracking,500);}});observer.observe(document.body,{childList:true,subtree:true});};","map":{"version":3,"names":["trackButtonClick","trackLinkClick","trackContactClick","initializeAutoTracking","setupTracking","document","querySelectorAll","forEach","link","dataset","tracked","addEventListener","e","href","getAttribute","text","textContent","trim","email","replace","phone","button","onclick","_card$querySelector","card","closest","serviceTitle","querySelector","concat","platform","includes","fileName","split","pop","readyState","observer","MutationObserver","mutations","shouldSetupTracking","mutation","type","addedNodes","length","node","nodeType","clearTimeout","window","autoTrackingTimeout","setTimeout","observe","body","childList","subtree"],"sources":["D:/00 Lumina Interactiva/website/Strategy/edunest.co/src/utils/autoTracking.js"],"sourcesContent":["// Automatic click tracking utility for elements without React handlers\r\nimport { trackButtonClick, trackLinkClick, trackContactClick } from './analytics';\r\n\r\nexport const initializeAutoTracking = () => {\r\n  // Wait for DOM to be fully loaded\r\n  const setupTracking = () => {\r\n    // Track all external links\r\n    document.querySelectorAll('a[href^=\"http\"], a[href^=\"https\"]').forEach(link => {\r\n      if (!link.dataset.tracked) {\r\n        link.addEventListener('click', (e) => {\r\n          const href = link.getAttribute('href');\r\n          const text = link.textContent.trim() || link.getAttribute('title') || 'External Link';\r\n          trackLinkClick(href, text, 'External Link');\r\n        });\r\n        link.dataset.tracked = 'true';\r\n      }\r\n    });\r\n\r\n    // Track mailto links\r\n    document.querySelectorAll('a[href^=\"mailto:\"]').forEach(link => {\r\n      if (!link.dataset.tracked) {\r\n        link.addEventListener('click', (e) => {\r\n          const email = link.getAttribute('href').replace('mailto:', '');\r\n          trackContactClick('Email', email);\r\n        });\r\n        link.dataset.tracked = 'true';\r\n      }\r\n    });\r\n\r\n    // Track tel links\r\n    document.querySelectorAll('a[href^=\"tel:\"]').forEach(link => {\r\n      if (!link.dataset.tracked) {\r\n        link.addEventListener('click', (e) => {\r\n          const phone = link.getAttribute('href').replace('tel:', '');\r\n          trackContactClick('Phone', phone);\r\n        });\r\n        link.dataset.tracked = 'true';\r\n      }\r\n    });\r\n\r\n    // Track buttons that don't have React handlers\r\n    document.querySelectorAll('button, input[type=\"button\"], input[type=\"submit\"]').forEach(button => {\r\n      if (!button.dataset.tracked && !button.onclick) {\r\n        button.addEventListener('click', (e) => {\r\n          const text = button.textContent.trim() || \r\n                      button.getAttribute('value') || \r\n                      button.getAttribute('title') || \r\n                      'Button Click';\r\n          trackButtonClick(text, 'Auto-tracked');\r\n        });\r\n        button.dataset.tracked = 'true';\r\n      }\r\n    });\r\n\r\n    // Track clicks on service cards that don't have explicit tracking\r\n    document.querySelectorAll('.service-card a, .card-action').forEach(link => {\r\n      if (!link.dataset.tracked) {\r\n        link.addEventListener('click', (e) => {\r\n          const card = link.closest('.service-card');\r\n          const serviceTitle = card ? card.querySelector('h3')?.textContent.trim() : 'Service Card';\r\n          trackButtonClick(`Service Card - ${serviceTitle}`, 'Services');\r\n        });\r\n        link.dataset.tracked = 'true';\r\n      }\r\n    });\r\n\r\n    // Track social media links\r\n    document.querySelectorAll('a[href*=\"facebook\"], a[href*=\"twitter\"], a[href*=\"linkedin\"], a[href*=\"instagram\"], a[href*=\"youtube\"]').forEach(link => {\r\n      if (!link.dataset.tracked) {\r\n        link.addEventListener('click', (e) => {\r\n          const href = link.getAttribute('href');\r\n          let platform = 'Social Media';\r\n          \r\n          if (href.includes('facebook')) platform = 'Facebook';\r\n          else if (href.includes('twitter')) platform = 'Twitter';\r\n          else if (href.includes('linkedin')) platform = 'LinkedIn';\r\n          else if (href.includes('instagram')) platform = 'Instagram';\r\n          else if (href.includes('youtube')) platform = 'YouTube';\r\n          \r\n          trackLinkClick(href, platform, 'Social Media');\r\n        });\r\n        link.dataset.tracked = 'true';\r\n      }\r\n    });\r\n\r\n    // Track download links\r\n    document.querySelectorAll('a[href$=\".pdf\"], a[href$=\".doc\"], a[href$=\".docx\"], a[href$=\".zip\"], a[href*=\"download\"]').forEach(link => {\r\n      if (!link.dataset.tracked) {\r\n        link.addEventListener('click', (e) => {\r\n          const href = link.getAttribute('href');\r\n          const fileName = href.split('/').pop() || 'Download';\r\n          trackLinkClick(href, fileName, 'Download');\r\n        });\r\n        link.dataset.tracked = 'true';\r\n      }\r\n    });\r\n  };\r\n\r\n  // Run immediately if DOM is ready\r\n  if (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', setupTracking);\r\n  } else {\r\n    setupTracking();\r\n  }\r\n\r\n  // Also run when new content is added (for dynamic content)\r\n  const observer = new MutationObserver((mutations) => {\r\n    let shouldSetupTracking = false;\r\n    \r\n    mutations.forEach((mutation) => {\r\n      if (mutation.type === 'childList' && mutation.addedNodes.length > 0) {\r\n        mutation.addedNodes.forEach((node) => {\r\n          if (node.nodeType === 1) { // Element node\r\n            shouldSetupTracking = true;\r\n          }\r\n        });\r\n      }\r\n    });\r\n    \r\n    if (shouldSetupTracking) {\r\n      // Debounce the setup to avoid too many calls\r\n      clearTimeout(window.autoTrackingTimeout);\r\n      window.autoTrackingTimeout = setTimeout(setupTracking, 500);\r\n    }\r\n  });\r\n\r\n  observer.observe(document.body, {\r\n    childList: true,\r\n    subtree: true\r\n  });\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}