{"ast":null,"code":"// Microsoft Clarity tracking utilities\nimport clarity from'@microsoft/clarity';// Clarity project ID - Replace with your actual Clarity project ID\nconst CLARITY_PROJECT_ID=process.env.REACT_APP_CLARITY_PROJECT_ID||'YOUR_CLARITY_PROJECT_ID';// Initialize Clarity\nexport const initializeClarity=()=>{if(typeof window!=='undefined'&&CLARITY_PROJECT_ID!=='YOUR_CLARITY_PROJECT_ID'){try{clarity.init(CLARITY_PROJECT_ID);console.log('Microsoft Clarity initialized successfully');}catch(error){console.error('Failed to initialize Microsoft Clarity:',error);}}else{console.warn('Clarity project ID not configured. Please set REACT_APP_CLARITY_PROJECT_ID environment variable.');}};// Track custom events in Clarity\nexport const trackClarityEvent=eventName=>{if(typeof window!=='undefined'&&window.clarity){try{clarity.event(eventName);console.log(\"Clarity: Custom event tracked - \".concat(eventName));}catch(error){console.error('Failed to track Clarity event:',error);}}};// Set user session information\nexport const setClarityUserSession=function(userId){let sessionData=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(typeof window!=='undefined'&&window.clarity){try{clarity.identify(userId,sessionData);console.log(\"Clarity: User session set - \".concat(userId),sessionData);}catch(error){console.error('Failed to set Clarity user session:',error);}}};// Track page views in Clarity\nexport const trackClarityPageView=(pagePath,pageTitle)=>{trackClarityEvent(\"page_view_\".concat(pagePath.replace(/\\//g,'_')));};// Track menu interactions\nexport const trackClarityMenuClick=function(menuItem){let section=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'main_navigation';trackClarityEvent(\"menu_\".concat(menuItem.replace(/\\s+/g,'_').toLowerCase()));};// Track button clicks\nexport const trackClarityButtonClick=function(buttonName){let category=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'Engagement';trackClarityEvent(\"button_\".concat(buttonName.replace(/\\s+/g,'_').toLowerCase()));};// Track form submissions\nexport const trackClarityFormSubmission=function(formName){let method=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'contact';trackClarityEvent(\"form_\".concat(formName.replace(/\\s+/g,'_').toLowerCase()));};// Track scroll events\nexport const trackClarityScroll=percentage=>{trackClarityEvent(\"scroll_\".concat(percentage));};// Track contact interactions\nexport const trackClarityContactClick=(contactType,contactValue)=>{trackClarityEvent(\"contact_\".concat(contactType.toLowerCase()));};// Track service inquiries\nexport const trackClarityServiceInquiry=function(serviceName){let serviceCategory=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'Digital Education';trackClarityEvent(\"service_\".concat(serviceName.replace(/\\s+/g,'_').toLowerCase()));};// Track language changes\nexport const trackClarityLanguageChange=(fromLang,toLang)=>{trackClarityEvent(\"language_\".concat(fromLang,\"_to_\").concat(toLang));};// Track errors\nexport const trackClarityError=function(errorType,errorMessage){let errorStack=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;trackClarityEvent(\"error_\".concat(errorType.replace(/\\s+/g,'_').toLowerCase()));};// Track performance metrics\nexport const trackClarityPerformance=function(metricName,value){let unit=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'ms';trackClarityEvent(\"performance_\".concat(metricName.replace(/\\s+/g,'_').toLowerCase()));};export default{initializeClarity,trackClarityEvent,setClarityUserSession,trackClarityPageView,trackClarityMenuClick,trackClarityButtonClick,trackClarityFormSubmission,trackClarityScroll,trackClarityContactClick,trackClarityServiceInquiry,trackClarityLanguageChange,trackClarityError,trackClarityPerformance};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}