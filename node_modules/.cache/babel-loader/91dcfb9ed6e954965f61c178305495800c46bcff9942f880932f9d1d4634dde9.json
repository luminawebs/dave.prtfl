{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { trackScroll, trackContactSectionView } from '../utils/analytics';\nconst useScrollTracking = () => {\n  _s();\n  useEffect(() => {\n    let scrollDepthTracked = [25, 50, 75, 100];\n    let contactSectionViewed = false;\n    const handleScroll = () => {\n      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n      const documentHeight = document.documentElement.scrollHeight - window.innerHeight;\n      const scrollPercent = Math.round(scrollTop / documentHeight * 100);\n\n      // Track scroll depth milestones\n      scrollDepthTracked.forEach((depth, index) => {\n        if (scrollPercent >= depth && scrollDepthTracked.includes(depth)) {\n          trackScroll(depth);\n          scrollDepthTracked.splice(index, 1); // Remove tracked depth\n        }\n      });\n\n      // Track contact section view\n      const contactSection = document.getElementById('contact');\n      if (contactSection && !contactSectionViewed) {\n        const rect = contactSection.getBoundingClientRect();\n        const isVisible = rect.top < window.innerHeight && rect.bottom > 0;\n        if (isVisible) {\n          trackContactSectionView();\n          contactSectionViewed = true;\n        }\n      }\n    };\n\n    // Throttle scroll events\n    let ticking = false;\n    const throttledScroll = () => {\n      if (!ticking) {\n        requestAnimationFrame(() => {\n          handleScroll();\n          ticking = false;\n        });\n        ticking = true;\n      }\n    };\n    window.addEventListener('scroll', throttledScroll);\n    return () => {\n      window.removeEventListener('scroll', throttledScroll);\n    };\n  }, []);\n};\n_s(useScrollTracking, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport default useScrollTracking;","map":{"version":3,"names":["useEffect","trackScroll","trackContactSectionView","useScrollTracking","_s","scrollDepthTracked","contactSectionViewed","handleScroll","scrollTop","window","pageYOffset","document","documentElement","documentHeight","scrollHeight","innerHeight","scrollPercent","Math","round","forEach","depth","index","includes","splice","contactSection","getElementById","rect","getBoundingClientRect","isVisible","top","bottom","ticking","throttledScroll","requestAnimationFrame","addEventListener","removeEventListener"],"sources":["D:/11 david.edunest.co/site/src/hooks/useScrollTracking.js"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { trackScroll, trackContactSectionView } from '../utils/analytics';\r\n\r\nconst useScrollTracking = () => {\r\n  useEffect(() => {\r\n    let scrollDepthTracked = [25, 50, 75, 100];\r\n    let contactSectionViewed = false;\r\n\r\n    const handleScroll = () => {\r\n      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n      const documentHeight = document.documentElement.scrollHeight - window.innerHeight;\r\n      const scrollPercent = Math.round((scrollTop / documentHeight) * 100);\r\n\r\n      // Track scroll depth milestones\r\n      scrollDepthTracked.forEach((depth, index) => {\r\n        if (scrollPercent >= depth && scrollDepthTracked.includes(depth)) {\r\n          trackScroll(depth);\r\n          scrollDepthTracked.splice(index, 1); // Remove tracked depth\r\n        }\r\n      });\r\n\r\n      // Track contact section view\r\n      const contactSection = document.getElementById('contact');\r\n      if (contactSection && !contactSectionViewed) {\r\n        const rect = contactSection.getBoundingClientRect();\r\n        const isVisible = rect.top < window.innerHeight && rect.bottom > 0;\r\n        \r\n        if (isVisible) {\r\n          trackContactSectionView();\r\n          contactSectionViewed = true;\r\n        }\r\n      }\r\n    };\r\n\r\n    // Throttle scroll events\r\n    let ticking = false;\r\n    const throttledScroll = () => {\r\n      if (!ticking) {\r\n        requestAnimationFrame(() => {\r\n          handleScroll();\r\n          ticking = false;\r\n        });\r\n        ticking = true;\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', throttledScroll);\r\n    \r\n    return () => {\r\n      window.removeEventListener('scroll', throttledScroll);\r\n    };\r\n  }, []);\r\n};\r\n\r\nexport default useScrollTracking;\r\n\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,uBAAuB,QAAQ,oBAAoB;AAEzE,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9BJ,SAAS,CAAC,MAAM;IACd,IAAIK,kBAAkB,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;IAC1C,IAAIC,oBAAoB,GAAG,KAAK;IAEhC,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACzB,MAAMC,SAAS,GAAGC,MAAM,CAACC,WAAW,IAAIC,QAAQ,CAACC,eAAe,CAACJ,SAAS;MAC1E,MAAMK,cAAc,GAAGF,QAAQ,CAACC,eAAe,CAACE,YAAY,GAAGL,MAAM,CAACM,WAAW;MACjF,MAAMC,aAAa,GAAGC,IAAI,CAACC,KAAK,CAAEV,SAAS,GAAGK,cAAc,GAAI,GAAG,CAAC;;MAEpE;MACAR,kBAAkB,CAACc,OAAO,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;QAC3C,IAAIL,aAAa,IAAII,KAAK,IAAIf,kBAAkB,CAACiB,QAAQ,CAACF,KAAK,CAAC,EAAE;UAChEnB,WAAW,CAACmB,KAAK,CAAC;UAClBf,kBAAkB,CAACkB,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;QACvC;MACF,CAAC,CAAC;;MAEF;MACA,MAAMG,cAAc,GAAGb,QAAQ,CAACc,cAAc,CAAC,SAAS,CAAC;MACzD,IAAID,cAAc,IAAI,CAAClB,oBAAoB,EAAE;QAC3C,MAAMoB,IAAI,GAAGF,cAAc,CAACG,qBAAqB,CAAC,CAAC;QACnD,MAAMC,SAAS,GAAGF,IAAI,CAACG,GAAG,GAAGpB,MAAM,CAACM,WAAW,IAAIW,IAAI,CAACI,MAAM,GAAG,CAAC;QAElE,IAAIF,SAAS,EAAE;UACb1B,uBAAuB,CAAC,CAAC;UACzBI,oBAAoB,GAAG,IAAI;QAC7B;MACF;IACF,CAAC;;IAED;IACA,IAAIyB,OAAO,GAAG,KAAK;IACnB,MAAMC,eAAe,GAAGA,CAAA,KAAM;MAC5B,IAAI,CAACD,OAAO,EAAE;QACZE,qBAAqB,CAAC,MAAM;UAC1B1B,YAAY,CAAC,CAAC;UACdwB,OAAO,GAAG,KAAK;QACjB,CAAC,CAAC;QACFA,OAAO,GAAG,IAAI;MAChB;IACF,CAAC;IAEDtB,MAAM,CAACyB,gBAAgB,CAAC,QAAQ,EAAEF,eAAe,CAAC;IAElD,OAAO,MAAM;MACXvB,MAAM,CAAC0B,mBAAmB,CAAC,QAAQ,EAAEH,eAAe,CAAC;IACvD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;AACR,CAAC;AAAC5B,EAAA,CAjDID,iBAAiB;AAmDvB,eAAeA,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}