{"ast":null,"code":"var _jsxFileName = \"D:\\\\11 david.edunest.co\\\\site\\\\src\\\\components\\\\LanguageSelector.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useLanguage } from '../contexts/LanguageContext';\nimport { trackButtonClick } from '../utils/analytics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageSelector = ({\n  className = '',\n  style = {}\n}) => {\n  _s();\n  const {\n    language,\n    switchLanguage,\n    getLocalizedPath\n  } = useLanguage();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const handleLanguageChange = newLanguage => {\n    // Get current path without language prefix\n    const currentPath = location.pathname;\n    const pathWithoutLang = currentPath.replace(/^\\/[a-z]{2}/, '') || '/';\n\n    // Navigate to new language path\n    const newPath = getLocalizedPath(pathWithoutLang, newLanguage);\n    navigate(newPath);\n\n    // Update language state\n    switchLanguage(newLanguage);\n\n    // Track the language switch\n    trackButtonClick(`Language Switch - ${newLanguage}`, 'Language Selector');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `language-selector ${className}`,\n    style: style,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleLanguageChange('es'),\n      style: {\n        background: 'none',\n        border: 'none',\n        textDecoration: 'none',\n        color: language === 'es' ? '#e3a127' : '#6c757d',\n        fontWeight: language === 'es' ? 'bold' : 'normal',\n        fontSize: '14px',\n        marginRight: '8px',\n        cursor: 'pointer',\n        padding: 0\n      },\n      \"aria-label\": \"Switch to Spanish\",\n      children: \"esp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: '#6c757d',\n        fontSize: '14px'\n      },\n      children: \"|\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleLanguageChange('en'),\n      style: {\n        background: 'none',\n        border: 'none',\n        textDecoration: 'none',\n        color: language === 'en' ? '#e3a127' : '#6c757d',\n        fontWeight: language === 'en' ? 'bold' : 'normal',\n        fontSize: '14px',\n        marginLeft: '8px',\n        cursor: 'pointer',\n        padding: 0\n      },\n      \"aria-label\": \"Switch to English\",\n      children: \"eng\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(LanguageSelector, \"Jkz2UDjQPKo3rP5gnJ1pqM2RPj8=\", false, function () {\n  return [useLanguage, useNavigate, useLocation];\n});\n_c = LanguageSelector;\nexport default LanguageSelector;\nvar _c;\n$RefreshReg$(_c, \"LanguageSelector\");","map":{"version":3,"names":["React","useNavigate","useLocation","useLanguage","trackButtonClick","jsxDEV","_jsxDEV","LanguageSelector","className","style","_s","language","switchLanguage","getLocalizedPath","navigate","location","handleLanguageChange","newLanguage","currentPath","pathname","pathWithoutLang","replace","newPath","children","onClick","background","border","textDecoration","color","fontWeight","fontSize","marginRight","cursor","padding","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","_c","$RefreshReg$"],"sources":["D:/11 david.edunest.co/site/src/components/LanguageSelector.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { useLanguage } from '../contexts/LanguageContext';\r\nimport { trackButtonClick } from '../utils/analytics';\r\n\r\nconst LanguageSelector = ({ className = '', style = {} }) => {\r\n  const { language, switchLanguage, getLocalizedPath } = useLanguage();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const handleLanguageChange = (newLanguage) => {\r\n    // Get current path without language prefix\r\n    const currentPath = location.pathname;\r\n    const pathWithoutLang = currentPath.replace(/^\\/[a-z]{2}/, '') || '/';\r\n    \r\n    // Navigate to new language path\r\n    const newPath = getLocalizedPath(pathWithoutLang, newLanguage);\r\n    navigate(newPath);\r\n    \r\n    // Update language state\r\n    switchLanguage(newLanguage);\r\n    \r\n    // Track the language switch\r\n    trackButtonClick(`Language Switch - ${newLanguage}`, 'Language Selector');\r\n  };\r\n\r\n  return (\r\n    <div className={`language-selector ${className}`} style={style}>\r\n      <button \r\n        onClick={() => handleLanguageChange('es')}\r\n        style={{\r\n          background: 'none',\r\n          border: 'none',\r\n          textDecoration: 'none',\r\n          color: language === 'es' ? '#e3a127' : '#6c757d',\r\n          fontWeight: language === 'es' ? 'bold' : 'normal',\r\n          fontSize: '14px',\r\n          marginRight: '8px',\r\n          cursor: 'pointer',\r\n          padding: 0\r\n        }}\r\n        aria-label=\"Switch to Spanish\"\r\n      >\r\n        esp\r\n      </button>\r\n      <span style={{ color: '#6c757d', fontSize: '14px' }}>|</span>\r\n      <button \r\n        onClick={() => handleLanguageChange('en')}\r\n        style={{\r\n          background: 'none',\r\n          border: 'none',\r\n          textDecoration: 'none',\r\n          color: language === 'en' ? '#e3a127' : '#6c757d',\r\n          fontWeight: language === 'en' ? 'bold' : 'normal',\r\n          fontSize: '14px',\r\n          marginLeft: '8px',\r\n          cursor: 'pointer',\r\n          padding: 0\r\n        }}\r\n        aria-label=\"Switch to English\"\r\n      >\r\n        eng\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LanguageSelector;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}