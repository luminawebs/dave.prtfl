{"ast":null,"code":"var _jsxFileName = \"D:\\\\00 Lumina Interactiva\\\\website\\\\Strategy\\\\edunest.co\\\\src\\\\components\\\\ConditionalLayout.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Footer from './Footer';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ConditionalLayout = ({\n  children\n}) => {\n  _s();\n  const location = useLocation();\n\n  // Routes that should use minimalist layout (no regular footer)\n  const minimalistRoutes = ['/ai-proficiency-challenge', '/coming-soon'];\n\n  // Check if current route should use minimalist layout\n  const isMinimalistRoute = minimalistRoutes.some(route => location.pathname.startsWith(route));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [children, !isMinimalistRoute && /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true);\n};\n_s(ConditionalLayout, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = ConditionalLayout;\nexport default ConditionalLayout;\nvar _c;\n$RefreshReg$(_c, \"ConditionalLayout\");","map":{"version":3,"names":["React","useLocation","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","ConditionalLayout","children","_s","location","minimalistRoutes","isMinimalistRoute","some","route","pathname","startsWith","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/00 Lumina Interactiva/website/Strategy/edunest.co/src/components/ConditionalLayout.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Footer from './Footer';\r\n\r\nconst ConditionalLayout = ({ children }) => {\r\n  const location = useLocation();\r\n  \r\n  // Routes that should use minimalist layout (no regular footer)\r\n  const minimalistRoutes = [\r\n    '/ai-proficiency-challenge',\r\n    '/coming-soon'\r\n  ];\r\n  \r\n  // Check if current route should use minimalist layout\r\n  const isMinimalistRoute = minimalistRoutes.some(route => \r\n    location.pathname.startsWith(route)\r\n  );\r\n  \r\n  return (\r\n    <>\r\n      {children}\r\n      {/* Only render regular footer for non-minimalist routes */}\r\n      {!isMinimalistRoute && <Footer />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ConditionalLayout;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9B,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMU,gBAAgB,GAAG,CACvB,2BAA2B,EAC3B,cAAc,CACf;;EAED;EACA,MAAMC,iBAAiB,GAAGD,gBAAgB,CAACE,IAAI,CAACC,KAAK,IACnDJ,QAAQ,CAACK,QAAQ,CAACC,UAAU,CAACF,KAAK,CACpC,CAAC;EAED,oBACEV,OAAA,CAAAE,SAAA;IAAAE,QAAA,GACGA,QAAQ,EAER,CAACI,iBAAiB,iBAAIR,OAAA,CAACF,MAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACjC,CAAC;AAEP,CAAC;AAACX,EAAA,CArBIF,iBAAiB;EAAA,QACJN,WAAW;AAAA;AAAAoB,EAAA,GADxBd,iBAAiB;AAuBvB,eAAeA,iBAAiB;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}