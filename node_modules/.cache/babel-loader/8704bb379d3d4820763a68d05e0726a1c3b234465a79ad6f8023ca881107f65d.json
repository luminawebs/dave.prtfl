{"ast":null,"code":"// Microsoft Clarity tracking utilities\nimport{clarity}from'@microsoft/clarity';// Clarity project ID - Replace with your actual Clarity project ID\nconst CLARITY_PROJECT_ID=process.env.REACT_APP_CLARITY_PROJECT_ID||'YOUR_CLARITY_PROJECT_ID';// Initialize Clarity\nexport const initializeClarity=()=>{if(typeof window!=='undefined'&&CLARITY_PROJECT_ID!=='YOUR_CLARITY_PROJECT_ID'){try{clarity.init(CLARITY_PROJECT_ID);console.log('Microsoft Clarity initialized successfully');}catch(error){console.error('Failed to initialize Microsoft Clarity:',error);}}else{console.warn('Clarity project ID not configured. Please set REACT_APP_CLARITY_PROJECT_ID environment variable.');}};// Track custom events in Clarity\nexport const trackClarityEvent=function(eventName){let eventData=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(typeof window!=='undefined'&&window.clarity){try{clarity.event(eventName,eventData);console.log(\"Clarity: Custom event tracked - \".concat(eventName),eventData);}catch(error){console.error('Failed to track Clarity event:',error);}}};// Set user session information\nexport const setClarityUserSession=function(userId){let sessionData=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(typeof window!=='undefined'&&window.clarity){try{clarity.identify(userId,sessionData);console.log(\"Clarity: User session set - \".concat(userId),sessionData);}catch(error){console.error('Failed to set Clarity user session:',error);}}};// Track page views in Clarity\nexport const trackClarityPageView=(pagePath,pageTitle)=>{trackClarityEvent('page_view',{page_path:pagePath,page_title:pageTitle,timestamp:new Date().toISOString()});};// Track menu interactions\nexport const trackClarityMenuClick=function(menuItem){let section=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'main_navigation';trackClarityEvent('menu_click',{menu_item:menuItem,menu_section:section,page_location:window.location.href});};// Track button clicks\nexport const trackClarityButtonClick=function(buttonName){let category=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'Engagement';trackClarityEvent('button_click',{button_name:buttonName,category:category,page_location:window.location.href});};// Track form submissions\nexport const trackClarityFormSubmission=function(formName){let method=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'contact';trackClarityEvent('form_submit',{form_name:formName,form_method:method,page_location:window.location.href});};// Track scroll events\nexport const trackClarityScroll=percentage=>{trackClarityEvent('scroll_depth',{scroll_percentage:percentage,page_location:window.location.href});};// Track contact interactions\nexport const trackClarityContactClick=(contactType,contactValue)=>{trackClarityEvent('contact_click',{contact_type:contactType,contact_value:contactValue,page_location:window.location.href});};// Track service inquiries\nexport const trackClarityServiceInquiry=function(serviceName){let serviceCategory=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'Digital Education';trackClarityEvent('service_inquiry',{service_name:serviceName,service_category:serviceCategory,page_location:window.location.href});};// Track language changes\nexport const trackClarityLanguageChange=(fromLang,toLang)=>{trackClarityEvent('language_change',{from_language:fromLang,to_language:toLang,page_location:window.location.href});};// Track errors\nexport const trackClarityError=function(errorType,errorMessage){let errorStack=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;trackClarityEvent('error',{error_type:errorType,error_message:errorMessage,error_stack:errorStack,page_location:window.location.href,timestamp:new Date().toISOString()});};// Track performance metrics\nexport const trackClarityPerformance=function(metricName,value){let unit=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'ms';trackClarityEvent('performance_metric',{metric_name:metricName,metric_value:value,metric_unit:unit,page_location:window.location.href,timestamp:new Date().toISOString()});};export default{initializeClarity,trackClarityEvent,setClarityUserSession,trackClarityPageView,trackClarityMenuClick,trackClarityButtonClick,trackClarityFormSubmission,trackClarityScroll,trackClarityContactClick,trackClarityServiceInquiry,trackClarityLanguageChange,trackClarityError,trackClarityPerformance};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}